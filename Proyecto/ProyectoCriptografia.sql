-- MySQL Script generated by MySQL Workbench
-- 11/28/16 23:36:03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ProyectoCriptografia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ProyectoCriptografia` ;

-- -----------------------------------------------------
-- Schema ProyectoCriptografia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ProyectoCriptografia` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `ProyectoCriptografia` ;

-- -----------------------------------------------------
-- Table `ProyectoCriptografia`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProyectoCriptografia`.`Users` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ProyectoCriptografia`.`Users` (
  `idUser` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `UserName` VARCHAR(8) NOT NULL,
  `Password` TINYBLOB NOT NULL,
  `FirstName` VARCHAR(20) NOT NULL,
  `LastName` VARCHAR(20) NOT NULL,
  `LastName2` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `UserName_UNIQUE` (`UserName` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ProyectoCriptografia`.`AccountType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProyectoCriptografia`.`AccountType` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ProyectoCriptografia`.`AccountType` (
  `idAccountType` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Description` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idAccountType`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ProyectoCriptografia`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProyectoCriptografia`.`Account` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ProyectoCriptografia`.`Account` (
  `idAccount` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idUser` INT UNSIGNED NOT NULL,
  `Type` INT UNSIGNED NOT NULL,
  `Balance` DOUBLE NOT NULL,
  `TotalCredit` DOUBLE UNSIGNED NULL,
  PRIMARY KEY (`idAccount`),
  INDEX `fk_type_idx` (`Type` ASC),
  UNIQUE INDEX `fk_uniqueAccount` (`idUser` ASC, `Type` ASC),
  CONSTRAINT `fk_type`
    FOREIGN KEY (`Type`)
    REFERENCES `ProyectoCriptografia`.`AccountType` (`idAccountType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user`
    FOREIGN KEY (`idUser`)
    REFERENCES `ProyectoCriptografia`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ProyectoCriptografia`.`Transfers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProyectoCriptografia`.`Transfers` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ProyectoCriptografia`.`Transfers` (
  `idTransfer` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idUser1` INT UNSIGNED NOT NULL,
  `idUser2` INT UNSIGNED NOT NULL,
  `Date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Amount` DOUBLE UNSIGNED NOT NULL,
  `Description` VARCHAR(45) NULL,
  PRIMARY KEY (`idTransfer`),
  INDEX `fk_user1_idx` (`idUser1` ASC),
  INDEX `fk_user2_idx` (`idUser2` ASC),
  CONSTRAINT `fk_user1`
    FOREIGN KEY (`idUser1`)
    REFERENCES `ProyectoCriptografia`.`Account` (`idAccount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user2`
    FOREIGN KEY (`idUser2`)
    REFERENCES `ProyectoCriptografia`.`Account` (`idAccount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ProyectoCriptografia`.`Movement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProyectoCriptografia`.`Movement` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ProyectoCriptografia`.`Movement` (
  `idMovement` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idAccount` INT UNSIGNED NOT NULL,
  `Date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Amount` DOUBLE NOT NULL,
  `Description` VARCHAR(45) NULL,
  PRIMARY KEY (`idMovement`),
  INDEX `fk_account_idx` (`idAccount` ASC),
  CONSTRAINT `fk_account`
    FOREIGN KEY (`idAccount`)
    REFERENCES `ProyectoCriptografia`.`Account` (`idAccount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `ProyectoCriptografia`.`Users`
-- -----------------------------------------------------
START TRANSACTION;
USE `ProyectoCriptografia`;
INSERT INTO `ProyectoCriptografia`.`Users` (`idUser`, `UserName`, `Password`, `FirstName`, `LastName`, `LastName2`) VALUES (1, 'gustavo', 0x64613339613365653565366234623064333235356266656639353630313839306166643830373039, 'Gustavo', 'Cabrera', 'Godinez');
INSERT INTO `ProyectoCriptografia`.`Users` (`idUser`, `UserName`, `Password`, `FirstName`, `LastName`, `LastName2`) VALUES (2, 'isidro', 0x64613339613365653565366234623064333235356266656639353630313839306166643830373039, 'Isidro Enrique', 'Martinez', 'Gutierrez');
INSERT INTO `ProyectoCriptografia`.`Users` (`idUser`, `UserName`, `Password`, `FirstName`, `LastName`, `LastName2`) VALUES (3, 'jaky', 0x64613339613365653565366234623064333235356266656639353630313839306166643830373039, 'Jaqueline', 'Villar', 'Corona');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ProyectoCriptografia`.`AccountType`
-- -----------------------------------------------------
START TRANSACTION;
USE `ProyectoCriptografia`;
INSERT INTO `ProyectoCriptografia`.`AccountType` (`idAccountType`, `Description`) VALUES (1, 'Credit');
INSERT INTO `ProyectoCriptografia`.`AccountType` (`idAccountType`, `Description`) VALUES (2, 'Savings');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ProyectoCriptografia`.`Account`
-- -----------------------------------------------------
START TRANSACTION;
USE `ProyectoCriptografia`;
INSERT INTO `ProyectoCriptografia`.`Account` (`idAccount`, `idUser`, `Type`, `Balance`, `TotalCredit`) VALUES (1, 1, 2, 100000, NULL);
INSERT INTO `ProyectoCriptografia`.`Account` (`idAccount`, `idUser`, `Type`, `Balance`, `TotalCredit`) VALUES (2, 1, 1, 0, 100000);
INSERT INTO `ProyectoCriptografia`.`Account` (`idAccount`, `idUser`, `Type`, `Balance`, `TotalCredit`) VALUES (3, 2, 2, 100000, NULL);
INSERT INTO `ProyectoCriptografia`.`Account` (`idAccount`, `idUser`, `Type`, `Balance`, `TotalCredit`) VALUES (4, 2, 1, 0, 100000);
INSERT INTO `ProyectoCriptografia`.`Account` (`idAccount`, `idUser`, `Type`, `Balance`, `TotalCredit`) VALUES (5, 3, 2, 100000, NULL);

COMMIT;

